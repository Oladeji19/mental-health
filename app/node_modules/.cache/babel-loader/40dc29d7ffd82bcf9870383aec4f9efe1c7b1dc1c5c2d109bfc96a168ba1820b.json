{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kesha\\\\mental-health\\\\app\\\\src\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport TwoFactor from \"./Two-Factor.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registration() {\n  _s();\n  {/* State variable for email. */}\n  const [email, setEmail] = useState(\"\");\n  {/* State variable for two factor. */}\n  const [showTwoFactor, setShowTwoFactor] = useState(\"\");\n  {/* State variable for the new password created. */}\n  const [newPassword, setNewPassword] = useState(\"\");\n  {/* State variable for the new password message. Length needs to be at least 12 characters.  */}\n  const [newPasswordMsg, setNewPasswordMsg] = useState(\"Length needs to be at least 12 characters.\");\n  {/* State variable for the new password message to make sure that it consists of uppercase, lowercase, numbers, and symbols.  */}\n  const [newPasswordMsgCharacters, setNewPasswordMsgCharacters] = useState(\"Needs to contains uppercase and lowercase characters, numbers, and symbols.\");\n  {/* State variable for the confirmed password.  */}\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n  {/* State variable to ensure that the confirmed password is the same as the new password.  */}\n  const [confirmedPasswordMsg, setConfirmedPasswordMsg] = useState(\"Password should be the same as the original.\");\n  {/* State variable for enabling and disabling the button to create the new account assuming that the new password as well as the confirmed password are both the same. */}\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  {/* Uppercase letters */}\n  const uppercase = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n  {/* Lowercase letters */}\n  const lowercase = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n  {/* Numbers */}\n  const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n  {/* Symbols */}\n  const symbols = ['@', '#', '$', '%', '&', '*', '!', '?', '^', '~', '|', '_', '+', '-', '=', '<', '>', '×', '÷', '√', '∞', '±', '≠', '≈', '∑', '∫', 'π', '∆', '∂', '€', '£', '¥', '₹', '₽', '₩', '₫', '₦', '.', ',', ';', ':', '\\'', '\"', '(', ')', '[', ']'];\n  {/* Checks to make sure that the password contains an element from an array. */}\n  function apply(arr, val) {\n    for (let a of arr) {\n      if (val.includes(a)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  {/* Updates the new password message for character check and length check as and when the user is adding a new password. */}\n  const handlePasswordChange = event => {\n    {/* Takes in the value. */}\n    const value = event.target.value;\n    {/* Apply function is created for symbols, uppercase, lowercase and numbers. For each apply function, a check happens to make sure that at least one of each: uppercase, lowercase, symbol, and numbers are present. */}\n    const booleans = [apply(symbols, value), apply(uppercase, value), apply(lowercase, value), apply(numbers, value)];\n    {/* Setting the new password, the new password length check message, as well as the new password character check message. */}\n    setNewPassword(value);\n    setNewPasswordMsg(value.length < 12 ? \"Length needs to be at least 12 characters.\" : \"\");\n    setNewPasswordMsgCharacters(booleans.includes(false) ? \"Needs to contains uppercase and lowercase characters, numbers, and symbols.\" : \"\");\n  };\n  const handleConfPasswordChange = event => {\n    {/* Takes in the value. */}\n    const value = event.target.value;\n    {/* Sets the confirmed password and message depending on whether the confirm password is the same as the new password. */}\n    setConfirmedPassword(value);\n    setConfirmedPasswordMsg(value !== newPassword ? \"Password should be the same as the original.\" : \"All set. Have fun.\");\n    console.log(value + \"::\" + newPassword + \"::::\" + value !== newPassword);\n    {/* Enables button if message says \"All set. Have fun.\". Else, keep the button disabled. */}\n    setIsButtonDisabled(value !== newPassword);\n  };\n  {\n    /* Sets emails to target values. */\n  }\n  const handleEmailChange = event => {\n    setEmail(event.target.value);\n    setEmailMsg(!rightFormat(event.target.value) ? \"Password should be the same as the original.\" : \"All set. Have fun.\");\n  };\n  {/* Shows the two factors only if the checkbox has been entered. */}\n  const handleCheckboxChange = event => {\n    setShowTwoFactor(event.target.checked);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Please create a username and password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      value: email,\n      onChange: handleEmailChange,\n      placeholder: \"Enter email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: newPassword,\n      onChange: handlePasswordChange,\n      placeholder: \"Enter new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: newPasswordMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: newPasswordMsgCharacters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Confirm Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmedPassword,\n      onChange: handleConfPasswordChange,\n      placeholder: \"Re-enter password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: confirmedPasswordMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remember-me\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Would you like to enable 2 factor authentication?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"remember\",\n        checked: showTwoFactor,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"remember\",\n        children: \"Enable 2 factor Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), showTwoFactor && /*#__PURE__*/_jsxDEV(TwoFactor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isButtonDisabled,\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"refreshButton\",\n        type: \"refresh\",\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Registration, \"7Y9Y07lIDydsH9jIHgW1AAlQEpE=\");\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["useState","TwoFactor","jsxDEV","_jsxDEV","Registration","_s","email","setEmail","showTwoFactor","setShowTwoFactor","newPassword","setNewPassword","newPasswordMsg","setNewPasswordMsg","newPasswordMsgCharacters","setNewPasswordMsgCharacters","confirmedPassword","setConfirmedPassword","confirmedPasswordMsg","setConfirmedPasswordMsg","isButtonDisabled","setIsButtonDisabled","uppercase","lowercase","numbers","symbols","apply","arr","val","a","includes","handlePasswordChange","event","value","target","booleans","length","handleConfPasswordChange","console","log","handleEmailChange","setEmailMsg","rightFormat","handleCheckboxChange","checked","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","htmlFor","href","disabled","_c","$RefreshReg$"],"sources":["C:/Users/kesha/mental-health/app/src/Registration.js"],"sourcesContent":["import \"./App.css\";\r\nimport { useState } from \"react\";\r\nimport TwoFactor from \"./Two-Factor.js\";\r\n\r\nfunction Registration() {\r\n  {/* State variable for email. */}\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  {/* State variable for two factor. */}\r\n  const [showTwoFactor, setShowTwoFactor] = useState(\"\");\r\n\r\n  {/* State variable for the new password created. */}\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n\r\n  {/* State variable for the new password message. Length needs to be at least 12 characters.  */}\r\n  const [newPasswordMsg, setNewPasswordMsg] = useState(\"Length needs to be at least 12 characters.\");\r\n\r\n  {/* State variable for the new password message to make sure that it consists of uppercase, lowercase, numbers, and symbols.  */}\r\n  const [newPasswordMsgCharacters, setNewPasswordMsgCharacters] = useState(\"Needs to contains uppercase and lowercase characters, numbers, and symbols.\");\r\n\r\n  {/* State variable for the confirmed password.  */}\r\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\r\n\r\n  {/* State variable to ensure that the confirmed password is the same as the new password.  */}\r\n  const [confirmedPasswordMsg, setConfirmedPasswordMsg] = useState(\"Password should be the same as the original.\");\r\n\r\n  {/* State variable for enabling and disabling the button to create the new account assuming that the new password as well as the confirmed password are both the same. */}\r\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\r\n\r\n  {/* Uppercase letters */}\r\n  const uppercase = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', \r\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\n  {/* Lowercase letters */}\r\n  const lowercase = [  'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', \r\n    'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];\r\n\r\n  {/* Numbers */}\r\n  const numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n\r\n  {/* Symbols */}\r\n  const symbols = [\r\n    '@', '#', '$', '%', '&', '*', '!', '?', '^', '~', '|', '_', '+', '-', '=', \r\n    '<', '>', '×', '÷', '√', '∞', '±', '≠', '≈', '∑', '∫', 'π', '∆', '∂',\r\n    '€', '£', '¥', '₹', '₽', '₩', '₫', '₦',\r\n    '.', ',', ';', ':', '\\'', '\"', '(', ')', '[', ']'\r\n  ];\r\n\r\n  {/* Checks to make sure that the password contains an element from an array. */}\r\n  function apply(arr, val) {\r\n    for(let a of arr) {\r\n      if(val.includes(a)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  {/* Updates the new password message for character check and length check as and when the user is adding a new password. */}\r\n  const handlePasswordChange = (event) => {\r\n    {/* Takes in the value. */}\r\n    const value = event.target.value;\r\n    {/* Apply function is created for symbols, uppercase, lowercase and numbers. For each apply function, a check happens to make sure that at least one of each: uppercase, lowercase, symbol, and numbers are present. */}\r\n    const booleans = [apply(symbols, value), apply(uppercase, value), apply(lowercase, value), apply(numbers, value)]\r\n    {/* Setting the new password, the new password length check message, as well as the new password character check message. */}\r\n    setNewPassword(value);\r\n    setNewPasswordMsg(value.length < 12 ? \"Length needs to be at least 12 characters.\" : \"\");\r\n    setNewPasswordMsgCharacters(booleans.includes(false) ? \"Needs to contains uppercase and lowercase characters, numbers, and symbols.\" : \"\");\r\n  }\r\n  const handleConfPasswordChange = (event) => {\r\n    {/* Takes in the value. */}\r\n    const value = event.target.value;\r\n    {/* Sets the confirmed password and message depending on whether the confirm password is the same as the new password. */}\r\n    setConfirmedPassword(value);\r\n    setConfirmedPasswordMsg(value !== newPassword ? \"Password should be the same as the original.\" : \"All set. Have fun.\");\r\n    console.log(value + \"::\" + newPassword + \"::::\" + value !== newPassword);\r\n    {/* Enables button if message says \"All set. Have fun.\". Else, keep the button disabled. */}\r\n    setIsButtonDisabled(value !== newPassword);\r\n  }\r\n\r\n  {\r\n    /* Sets emails to target values. */\r\n  }\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n    setEmailMsg(!rightFormat(event.target.value) ? \"Password should be the same as the original.\" : \"All set. Have fun.\");\r\n  };\r\n\r\n  {/* Shows the two factors only if the checkbox has been entered. */}\r\n  const handleCheckboxChange = (event) => {\r\n    setShowTwoFactor(event.target.checked);\r\n  }\r\n  return (\r\n    <div className=\"form-input\">\r\n      {/* Creates an account and gives space for username and password. */}\r\n      <h1 className=\"title\">Create an Account</h1>\r\n      <h3>Please create a username and password.</h3>\r\n      <label>Email</label>\r\n      <input type=\"text\" id=\"email\" value={email} onChange={handleEmailChange} placeholder=\"Enter email\"/>\r\n      <br></br>\r\n      <label>Password</label>\r\n      <input type=\"password\" value={newPassword} onChange={handlePasswordChange} placeholder=\"Enter new password\" />\r\n      <br></br>\r\n      <p>{newPasswordMsg}</p>\r\n      <p>{newPasswordMsgCharacters}</p>\r\n      <label>Confirm Password</label>\r\n      <input type=\"password\" value={confirmedPassword} onChange={handleConfPasswordChange} placeholder=\"Re-enter password\"/>\r\n      <p>{confirmedPasswordMsg}</p>\r\n      <div className=\"remember-me\">\r\n        {/* Basically asks you for two-factor authentication. */}\r\n        <p>Would you like to enable 2 factor authentication?</p>\r\n        <input type=\"checkbox\" \r\n               id=\"remember\" \r\n               checked={showTwoFactor}\r\n               onChange={handleCheckboxChange}/>\r\n        {/* If checked, gives you a label to enable two factor authentication. */}\r\n        <label htmlFor=\"remember\">Enable 2 factor Authentication</label>\r\n      </div>\r\n      {/* Shows two factor only if two factor has been set to true. */}\r\n      {showTwoFactor && (<TwoFactor />)}\r\n      <div className=\"login\">\r\n        {/* Gives you a chance to login if you already have the given account. */}\r\n        <span>\r\n          Already have an account?<a href=\"#\">Login</a>\r\n        </span>\r\n      </div>\r\n      <div id=\"buttons\">\r\n        {/* Gives you chance to create account. */}\r\n        <button disabled={isButtonDisabled}>\r\n          Create Account\r\n        </button>\r\n        {/* Gives you chance to refresh if login is being done. */}\r\n        <button id=\"refreshButton\" type=\"refresh\">\r\n          Refresh\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Registration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}