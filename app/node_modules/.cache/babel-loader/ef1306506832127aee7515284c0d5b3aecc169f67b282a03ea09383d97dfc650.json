{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/mental-health/app/src/Login.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { registeredUsers } from \"./RegisteredUsers.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  // Function to handle the login\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('Login registered successfully:', data.message);\n        console.log('User ID:', data.user_id);\n        navigate(\"Home\");\n\n        //  setRegisterMessage(\"Registration successful! You can now login.\");\n      } else {\n        console.error('Login failed:', data.error);\n        // setRegisterMessage(data.error || \"Registration failed. Please try again.\");\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n      // setRegisterMessage(\"An error occurred. Please try again later.\");\n    }\n  };\n  {\n    /* Initializing useNavigate object to allow for conditional navigation. */\n  }\n  {\n    /* Remember me state variable that toggles status of Remember Me. */\n  }\n  const [rememberMe, setRememberMe] = useState(false);\n  let count = 1;\n  {\n    /* Creates a username and handles the username change. */\n  }\n  const [username, setUsername] = useState(\"\");\n  const handleUserNameChange = e => {\n    setUsername(e.target.value);\n  };\n  {\n    /* Creates a password and handles the password change. */\n  }\n  const [password, setPassword] = useState(\"\");\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  {\n    /* Functions created for captcha */\n  }\n  let captchaSet = false;\n  const onCaptchaChange = () => {\n    captchaSet = true;\n  };\n  let captcha;\n  const setCaptchaRef = ref => {\n    if (ref) {\n      captcha = ref;\n    }\n    return captcha;\n  };\n  {\n    /* Function to check if an existing user is logging in correctly */\n  }\n  const containsUserPassword = (username, password) => {\n    const userPass = [false, false];\n    for (let i = 0; i < registeredUsers.length; i++) {\n      for (const [user, pass] of Object.entries(registeredUsers[i])) {\n        if (user === username) {\n          userPass[0] = true;\n        }\n        if (pass === password) {\n          userPass[1] = true;\n        }\n      }\n    }\n    console.log(userPass);\n    return userPass;\n  };\n  {\n    /* Makes sure that captcha is being done before the submit button is being clicked. If button isn't clicked, alert forced for logging in. */\n  }\n  // const canSubmit = () => {\n  //   const result = containsUserPassword(username, password);\n  //   if (!captchaSet) {\n  //     console.log(\"1\");\n  //     alert(\"Complete the reCAPTCHA below before logging in.\");\n  //   } else if (result[0] === false && result[1] === false) {\n  //     console.log(\"2\");\n  //     alert(\"Please register\");\n  //   } else if (result[0] === true && result[1] === false) {\n  //     console.log(\"3\");\n  //     alert(\"Please go to forgot password\");\n  //   } else if (result[0] === false && result[1] === true) {\n  //     console.log(\"4\");\n  //     alert(\"Username isn't registered. Try again, please.\");\n  //   } else {\n  //     if (rememberMe) {\n  //       localStorage.setItem(\"username\", username);\n  //       localStorage.setItem(\"password\", password);\n  //       console.log(\"User is remembered\");\n  //     }\n  //     console.log(\"5\");\n  //     setUsername(username);\n  //     setPassword(password);\n  //     console.log(\"Your details are\", username, password);\n  //     navigate(\"Home\");\n  //   }\n  // };\n\n  const handleCheckboxChange = () => {\n    setRememberMe(!rememberMe);\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedPassword = localStorage.getItem(\"password\");\n    if (storedUsername && storedPassword) {\n      setUsername(storedUsername);\n      setPassword(storedPassword);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"login-title\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter your username and password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: username,\n        onChange: handleUserNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remember-forgot\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remember-me\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: rememberMe,\n          onChange: handleCheckboxChange,\n          id: \"remember\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"remember\",\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forgot\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"Forgot Password\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"Registration\",\n          children: \"Register?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n      sitekey: \"6Lcr3iMqAAAAAM7Znb8LuOPob6pZoH3RGR6MXePd\",\n      onChange: onCaptchaChange,\n      ref: r => setCaptchaRef(r),\n      className: \"captchabackground\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"submitButton\",\n        type: \"submit\",\n        onClick: handleLogin,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"refreshButton\",\n        type: \"submit\",\n        onClick: () => captcha.reset(),\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      id: \"output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"h02qKn8KUm83TRaX5vHuBr5x+Qw=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","ReCAPTCHA","Link","useNavigate","registeredUsers","jsxDEV","_jsxDEV","Login","_s","navigate","handleLogin","response","fetch","method","headers","body","JSON","stringify","username","password","data","json","ok","console","log","message","user_id","error","rememberMe","setRememberMe","count","setUsername","handleUserNameChange","e","target","value","setPassword","handlePasswordChange","captchaSet","onCaptchaChange","captcha","setCaptchaRef","ref","containsUserPassword","userPass","i","length","user","pass","Object","entries","handleCheckboxChange","storedUsername","localStorage","getItem","storedPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","checked","htmlFor","to","sitekey","r","onClick","reset","_c","$RefreshReg$"],"sources":["/Users/ivan/mental-health/app/src/Login.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { registeredUsers } from \"./RegisteredUsers.js\";\n\nfunction Login() {\n  // Function to handle the login\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        console.log('Login registered successfully:', data.message);\n        console.log('User ID:', data.user_id);\n        navigate(\"Home\");\n        \n      //  setRegisterMessage(\"Registration successful! You can now login.\");\n      } else {\n        console.error('Login failed:', data.error);\n       // setRegisterMessage(data.error || \"Registration failed. Please try again.\");\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n     // setRegisterMessage(\"An error occurred. Please try again later.\");\n    }\n  };\n  {\n    /* Initializing useNavigate object to allow for conditional navigation. */\n  }\n\n  {\n    /* Remember me state variable that toggles status of Remember Me. */\n  }\n  const [rememberMe, setRememberMe] = useState(false);\n  let count = 1;\n  {\n    /* Creates a username and handles the username change. */\n  }\n  const [username, setUsername] = useState(\"\");\n  const handleUserNameChange = (e) => {\n    setUsername(e.target.value);\n  };\n\n  {\n    /* Creates a password and handles the password change. */\n  }\n  const [password, setPassword] = useState(\"\");\n  const handlePasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  {\n    /* Functions created for captcha */\n  }\n  let captchaSet = false;\n  const onCaptchaChange = () => {\n    captchaSet = true;\n  };\n  let captcha;\n  const setCaptchaRef = (ref) => {\n    if (ref) {\n      captcha = ref;\n    }\n    return captcha;\n  };\n\n  {\n    /* Function to check if an existing user is logging in correctly */\n  }\n  const containsUserPassword = (username, password) => {\n    const userPass = [false, false];\n    for (let i = 0; i < registeredUsers.length; i++) {\n      for (const [user, pass] of Object.entries(registeredUsers[i])) {\n        if (user === username) {\n          userPass[0] = true;\n        }\n        if (pass === password) {\n          userPass[1] = true;\n        }\n      }\n    }\n    console.log(userPass);\n    return userPass;\n  };\n\n  {\n    /* Makes sure that captcha is being done before the submit button is being clicked. If button isn't clicked, alert forced for logging in. */\n  }\n  // const canSubmit = () => {\n  //   const result = containsUserPassword(username, password);\n  //   if (!captchaSet) {\n  //     console.log(\"1\");\n  //     alert(\"Complete the reCAPTCHA below before logging in.\");\n  //   } else if (result[0] === false && result[1] === false) {\n  //     console.log(\"2\");\n  //     alert(\"Please register\");\n  //   } else if (result[0] === true && result[1] === false) {\n  //     console.log(\"3\");\n  //     alert(\"Please go to forgot password\");\n  //   } else if (result[0] === false && result[1] === true) {\n  //     console.log(\"4\");\n  //     alert(\"Username isn't registered. Try again, please.\");\n  //   } else {\n  //     if (rememberMe) {\n  //       localStorage.setItem(\"username\", username);\n  //       localStorage.setItem(\"password\", password);\n  //       console.log(\"User is remembered\");\n  //     }\n  //     console.log(\"5\");\n  //     setUsername(username);\n  //     setPassword(password);\n  //     console.log(\"Your details are\", username, password);\n  //     navigate(\"Home\");\n  //   }\n  // };\n\n  const handleCheckboxChange = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"username\");\n    const storedPassword = localStorage.getItem(\"password\");\n    if (storedUsername && storedPassword) {\n      setUsername(storedUsername);\n      setPassword(storedPassword);\n    }\n  }, []);\n\n  return (\n    <div className=\"login\">\n      {/* Contains the login and password information. Allows user to type username and password.*/}\n      <h1 className=\"login-title\">Log In</h1>\n      <p>Please enter your username and password.</p>\n      <div className=\"form-input\">\n        <label>Username</label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          value={username}\n          onChange={handleUserNameChange}\n        />\n        <br></br>\n        <label>Password</label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          value={password}\n          onChange={handlePasswordChange}\n        />\n      </div>\n      <br></br>\n      <br></br>\n      {/* The container for people who've forgotten their password. */}\n      <div className=\"remember-forgot\">\n        <div className=\"remember-me\">\n          <input\n            type=\"checkbox\"\n            checked={rememberMe}\n            onChange={handleCheckboxChange}\n            id=\"remember\"\n          />\n          <label htmlFor=\"remember\">Remember me</label>\n        </div>\n        <div className=\"forgot\">\n          <Link to=\"Forgot Password\">Forgot Password?</Link>\n        </div>\n      </div>\n      {/* Allows you to register as a new user. */}\n      <div className=\"register\">\n        <span>\n          Don't have an account? <Link to=\"Registration\">Register?</Link>\n        </span>\n      </div>\n      {/* I'm not a robot button. */}\n      <ReCAPTCHA\n        sitekey=\"6Lcr3iMqAAAAAM7Znb8LuOPob6pZoH3RGR6MXePd\"\n        onChange={onCaptchaChange}\n        ref={(r) => setCaptchaRef(r)}\n        className=\"captchabackground\"\n      />\n      {/* Button for submitting and refreshing. */}\n      <div id=\"buttons\">\n        <button id=\"submitButton\" type=\"submit\" onClick={handleLogin}>\n          Submit\n        </button>\n        <button\n          id=\"refreshButton\"\n          type=\"submit\"\n          onClick={() => captcha.reset()}\n        >\n          Refresh\n        </button>\n      </div>\n      {/* Generated output. */}\n      <span id=\"output\"></span>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}