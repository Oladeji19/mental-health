{"ast":null,"code":"var _jsxFileName = \"/Users/ivan/mental-health/app/src/Registration.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport TwoFactor from \"./Two-Factor.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Registration() {\n  _s();\n  // State variables\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n  const [emailMsg, setEmailMsg] = useState(\"Email needs to have a prefix, @, domain and then .edu.\");\n  const [newPasswordMsg, setNewPasswordMsg] = useState(\"Length needs to be at least 12 characters.\");\n  const [newPasswordMsgCharacters, setNewPasswordMsgCharacters] = useState(\"Needs to contain uppercase and lowercase characters, numbers, and symbols.\");\n  const [confirmedPasswordMsg, setConfirmedPasswordMsg] = useState(\"Password should be the same as the original.\");\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const [registerMessage, setRegisterMessage] = useState(\"\");\n  const [showTwoFactor, setShowTwoFactor] = useState(false);\n\n  // Function to check if the password meets the requirements\n  const apply = (arr, val) => arr.some(a => val.includes(a));\n\n  // Regex for validating email format\n  const rightFormat = email => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  const handleEmailChange = event => {\n    const value = event.target.value;\n    setEmail(value);\n    setEmailMsg(!rightFormat(value) ? \"Email needs to have a prefix, @, domain and then .edu.\" : \"\");\n  };\n  const handlePasswordChange = event => {\n    const value = event.target.value;\n    const symbols = [\"@\", \"#\", \"$\", \"%\", \"&\", \"*\", \"!\", \"?\", \"^\", \"~\", \"|\", \"_\", \"+\", \"-\", \"=\", \"<\", \">\", \"×\", \"÷\", \"√\", \"∞\", \"±\", \"≠\", \"≈\", \"∑\", \"∫\", \"π\", \"∆\", \"∂\", \"€\", \"£\", \"¥\", \"₹\", \"₽\", \"₩\", \"₫\", \"₦\", \".\", \",\", \";\", \":\", \"'\", '\"', \"(\", \")\", \"[\", \"]\"];\n    const uppercase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n    const lowercase = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n    const numbers = \"0123456789\".split(\"\");\n    const booleans = [apply(symbols, value), apply(uppercase, value), apply(lowercase, value), apply(numbers, value)];\n    setPassword(value);\n    setNewPasswordMsg(value.length < 12 ? \"Length needs to be at least 12 characters.\" : \"\");\n    setNewPasswordMsgCharacters(booleans.includes(false) ? \"Needs to contain uppercase and lowercase characters, numbers, and symbols.\" : \"\");\n  };\n  const handleConfPasswordChange = event => {\n    const value = event.target.value;\n    setConfirmedPassword(value);\n    setConfirmedPasswordMsg(value !== password ? \"Password should be the same as the original.\" : \"All set. Have fun.\");\n    setIsButtonDisabled(value !== password || emailMsg !== \"\");\n  };\n  const handleCheckboxChange = event => {\n    setShowTwoFactor(event.target.checked);\n  };\n  const handleRegister = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/register_user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: email,\n          username: username,\n          password: password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('User registered successfully:', data.message);\n        console.log('User ID:', data.user_id);\n        setRegisterMessage(\"Registration successful! You can now login.\");\n      } else {\n        console.error('Registration failed:', data.error);\n        setRegisterMessage(data.error || \"Registration failed. Please try again.\");\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n      setRegisterMessage(\"An error occurred. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Create an Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Please create a username and password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: handleEmailChange,\n      placeholder: \"Enter email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Enter username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: emailMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: handlePasswordChange,\n      placeholder: \"Enter new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: newPasswordMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: newPasswordMsgCharacters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Confirm Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: confirmedPassword,\n      onChange: handleConfPasswordChange,\n      placeholder: \"Re-enter password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"remember-me\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Would you like to enable 2 factor authentication?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: showTwoFactor,\n        onChange: handleCheckboxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"remember\",\n        children: \"Enable 2 factor Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), showTwoFactor && /*#__PURE__*/_jsxDEV(TwoFactor, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"register\",\n        type: \"button\",\n        disabled: isButtonDisabled,\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"refreshButton\",\n        type: \"button\",\n        onClick: () => window.location.reload(),\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: registerMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n_s(Registration, \"cIDRS4MPl8siVkQA1f0xeipfmQk=\");\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["useState","TwoFactor","Link","jsxDEV","_jsxDEV","Registration","_s","email","setEmail","username","setUsername","password","setPassword","confirmedPassword","setConfirmedPassword","emailMsg","setEmailMsg","newPasswordMsg","setNewPasswordMsg","newPasswordMsgCharacters","setNewPasswordMsgCharacters","confirmedPasswordMsg","setConfirmedPasswordMsg","isButtonDisabled","setIsButtonDisabled","registerMessage","setRegisterMessage","showTwoFactor","setShowTwoFactor","apply","arr","val","some","a","includes","rightFormat","test","handleEmailChange","event","value","target","handlePasswordChange","symbols","uppercase","split","lowercase","numbers","booleans","length","handleConfPasswordChange","handleCheckboxChange","checked","handleRegister","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","log","message","user_id","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","e","htmlFor","to","id","disabled","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/ivan/mental-health/app/src/Registration.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport TwoFactor from \"./Two-Factor.js\";\nimport { Link } from \"react-router-dom\";\n\nfunction Registration() {\n  // State variables\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmedPassword, setConfirmedPassword] = useState(\"\");\n  const [emailMsg, setEmailMsg] = useState(\n    \"Email needs to have a prefix, @, domain and then .edu.\"\n  );\n  const [newPasswordMsg, setNewPasswordMsg] = useState(\n    \"Length needs to be at least 12 characters.\"\n  );\n  const [newPasswordMsgCharacters, setNewPasswordMsgCharacters] = useState(\n    \"Needs to contain uppercase and lowercase characters, numbers, and symbols.\"\n  );\n  const [confirmedPasswordMsg, setConfirmedPasswordMsg] = useState(\n    \"Password should be the same as the original.\"\n  );\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true);\n  const [registerMessage, setRegisterMessage] = useState(\"\");\n  const [showTwoFactor, setShowTwoFactor] = useState(false);\n\n  // Function to check if the password meets the requirements\n  const apply = (arr, val) => arr.some(a => val.includes(a));\n\n  // Regex for validating email format\n  const rightFormat = (email) => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n\n  const handleEmailChange = (event) => {\n    const value = event.target.value;\n    setEmail(value);\n    setEmailMsg(!rightFormat(value) ? \"Email needs to have a prefix, @, domain and then .edu.\" : \"\");\n  };\n\n  const handlePasswordChange = (event) => {\n    const value = event.target.value;\n    const symbols = [\"@\", \"#\", \"$\", \"%\", \"&\", \"*\", \"!\", \"?\", \"^\", \"~\", \"|\", \"_\", \"+\", \"-\", \"=\", \"<\", \">\", \"×\", \"÷\", \"√\", \"∞\", \"±\", \"≠\", \"≈\", \"∑\", \"∫\", \"π\", \"∆\", \"∂\", \"€\", \"£\", \"¥\", \"₹\", \"₽\", \"₩\", \"₫\", \"₦\", \".\", \",\", \";\", \":\", \"'\", '\"', \"(\", \")\", \"[\", \"]\"];\n    const uppercase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\");\n    const lowercase = \"abcdefghijklmnopqrstuvwxyz\".split(\"\");\n    const numbers = \"0123456789\".split(\"\");\n\n    const booleans = [\n      apply(symbols, value),\n      apply(uppercase, value),\n      apply(lowercase, value),\n      apply(numbers, value),\n    ];\n\n    setPassword(value);\n    setNewPasswordMsg(value.length < 12 ? \"Length needs to be at least 12 characters.\" : \"\");\n    setNewPasswordMsgCharacters(booleans.includes(false) ? \"Needs to contain uppercase and lowercase characters, numbers, and symbols.\" : \"\");\n  };\n\n  const handleConfPasswordChange = (event) => {\n    const value = event.target.value;\n    setConfirmedPassword(value);\n    setConfirmedPasswordMsg(value !== password ? \"Password should be the same as the original.\" : \"All set. Have fun.\");\n    setIsButtonDisabled(value !== password || emailMsg !== \"\");\n  };\n\n  const handleCheckboxChange = (event) => {\n    setShowTwoFactor(event.target.checked);\n  };\n\n  const handleRegister = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/register_user', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: email,\n          username: username,\n          password: password\n        }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        console.log('User registered successfully:', data.message);\n        console.log('User ID:', data.user_id);\n        setRegisterMessage(\"Registration successful! You can now login.\");\n      } else {\n        console.error('Registration failed:', data.error);\n        setRegisterMessage(data.error || \"Registration failed. Please try again.\");\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n      setRegisterMessage(\"An error occurred. Please try again later.\");\n    }\n  };\n\n  return (\n    <div className=\"form-input\">\n      <h1 className=\"title\">Create an Account</h1>\n      <h3>Please create a username and password.</h3>\n      <label>Email</label>\n      <input\n        type=\"text\"\n        value={email}\n        onChange={handleEmailChange}\n        placeholder=\"Enter email\"\n      />\n      <label>Username</label>\n      <input\n        type=\"text\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        placeholder=\"Enter username\"\n      />\n      <p>{emailMsg}</p>\n      <label>Password</label>\n      <input\n        type=\"password\"\n        value={password}\n        onChange={handlePasswordChange}\n        placeholder=\"Enter new password\"\n      />\n      <p>{newPasswordMsg}</p>\n      <p>{newPasswordMsgCharacters}</p>\n      <label>Confirm Password</label>\n      <input\n        type=\"password\"\n        value={confirmedPassword}\n        onChange={handleConfPasswordChange}\n        placeholder=\"Re-enter password\"\n      />\n      <div className=\"remember-me\">\n        <p>Would you like to enable 2 factor authentication?</p>\n        <input\n          type=\"checkbox\"\n          checked={showTwoFactor}\n          onChange={handleCheckboxChange}\n        />\n        <label htmlFor=\"remember\">Enable 2 factor Authentication</label>\n      </div>\n      {showTwoFactor && <TwoFactor />}\n      <div className=\"login\">\n        <span>\n          Already have an account?<Link to=\"/\">Login</Link>\n        </span>\n      </div>\n      <div id=\"buttons\">\n        <button \n          id=\"register\"\n          type=\"button\"\n          disabled={isButtonDisabled}\n          onClick={handleRegister}\n        >\n          Register\n        </button>\n        <button \n          id=\"refreshButton\" \n          type=\"button\"\n          onClick={() => window.location.reload()}\n        >\n          Refresh\n        </button>\n      </div>\n      <p>{registerMessage}</p>\n    </div>\n  );\n}\n\nexport default Registration;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}